trigger:
  branches:
    include:
    - master
  paths:
    include:
    - Dag17/Frontend/*

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: Release
  projectPath: Dag17/Frontend
  applicationPath: $(projectPath)/OrderWebsite
  dockerRegistryServiceConnection: 'minorRegistry'
  imageRepository: 'yvds-dag20-orderwebsite'

steps:

  - task: DotNetCoreCLI@2
    displayName: Build project
    inputs:
      command: 'build'
      projects: '$(projectPath)/**/*.csproj'
      arguments: '-c $(buildConfiguration)'
  - task: DotNetCoreCLI@2
    displayName: Run tests
    inputs:
      command: 'test'
      projects: '$(projectPath)/**/*.Test/*.csproj'
      arguments: '--no-build -c $(buildConfiguration)'
  - task: DotNetCoreCLI@2
    displayName: Publish project
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: '$(applicationPath)/*.csproj'
      arguments: '--no-build -c $(buildConfiguration) -o $(applicationPath)/obj/docker/publish'
      zipAfterPublish: false
      modifyOutputPath: false
  - task: Docker@2
    displayName: Docker build and push
    inputs:
      containerRegistry: $(dockerRegistryServiceConnection)
      repository: $(imageRepository)
      command: 'buildAndPush'
      Dockerfile: '$(applicationPath)/Dockerfile'
      tags: '1'
